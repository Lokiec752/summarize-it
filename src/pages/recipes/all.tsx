import { type InferSelectModel } from "drizzle-orm";
import { type GetStaticProps } from "next";
import { db } from "~/server/db";
import { recipes } from "~/server/db/schema";

type Recipes = Pick<InferSelectModel<typeof recipes>, "name">;

import Layout from "~/components/Layout";
import Link from "next/link";
import Head from "next/head";

export default function All({ allRecipes }: { allRecipes: Recipes[] }) {
  return (
    <Layout>
      <Head>
        <title>Summarize</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {allRecipes.length === 0 ? (
        <p className="text-white">No recipes found</p>
      ) : (
        <ul className="text-xl text-white">
          {allRecipes.map((recipe) => (
            <li key={recipe.name} className="underline">
              <Link href={recipe.name}>{recipe.name}</Link>
            </li>
          ))}
        </ul>
      )}
    </Layout>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const allRecipes = await db
    .select({
      name: recipes.name,
    })
    .from(recipes);
  return {
    props: {
      allRecipes,
    },
  };
};
